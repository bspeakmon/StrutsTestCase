<project name="guavatrain" default="all" basedir=".">

    <!-- ================ Initialize Property Values ================ -->

    <!-- set jikes as the java compiler -->
    <property name="build.compiler" value="jikes" />

    <!-- compile options defaults -->
    <property name="comp.deprecate"      value="off" />
    <property name="comp.debug"          value="on" />
    <property name="comp.optimize"       value="off" />
    <property name="comp.depend"         value="on" />
    <property name="comp.verbose"        value="off" />

    <property name="build.dir"      value="${basedir}/build"/>
    <property name="src.dir"        value="${basedir}/src"/>
    <property name="distribute.dir" value="${basedir}/dist/strutstest"/>
    <property name="doc.dir"        value="${distribute.dir}/docs"/>
    <property name="test.dir"       value="${basedir}/test-results"/>
    <property name="temp.dir"       value="${basedir}/temp"/>
    <property name="lib.dir"        value="${basedir}/lib"/>

    <!-- set class.path to use with javac/jikes -->
    <path id="class.path">
        <fileset dir="${lib.dir}">
            <include name="*.jar" />
            <include name="*.zip" />
            <exclude name="struts-1.1b2.jar" if="build_1.0"/>
            <exclude name="struts-1.0.jar" unless="build_1.0"/>
            <exclude name="servletapi-2.3.jar" if="build_2.2"/>
            <exclude name="servletapi-2.2.jar" unless="build_2.2"/>
            <exclude name="cactus-13-1.4.1.jar" if="build_2.2"/>
            <exclude name="cactus-12-1.4.1.jar" unless="build_2.2"/>
        </fileset>
        <pathelement location="${build.dir}" />
    </path>

    <!-- ====================== Build Targets ====================== -->


    <!-- Compile the application classes -->
    <target name="build">
        <mkdir dir="${build.dir}" />
        <!--<antcall target="patch.22" inheritAll="true"/>
        <antcall target="patch.10" inheritAll="true"/>-->
        <javac srcdir="${src.dir}"
            destdir="${build.dir}"
            deprecation="${comp.deprecate}"
            debug="${comp.debug}"
            optimize="${comp.optimize}"
            verbose="${comp.verbose}"
            depend="${comp.depend}">
            <classpath refid="class.path" />
            <include name="**/*.java" />
            <!-- Build the Servlet 2.2 or Struts 1.0.2 version if specified -->
            <exclude name="**/1_0/**" unless="build_1.0"/>
            <exclude name="**/struts/Common.java" if="build_1.0"/>
            <exclude name="**/*Token*.java" if="build_1.0"/>
            <exclude name="**/*Dyna*.java" if="build_1.0"/>
            <exclude name="**/*Tiles*.java" if="build_1.0"/>
            <exclude name="**/Filter*.java" if="build_2.2"/>
        </javac>
    </target>

    <!-- package the application for deployment.  -->
    <target name="package">
        <mkdir dir="${distribute.dir}"/>
        <jar jarfile="${distribute.dir}/strutstest.jar">
            <fileset dir="${build.dir}" includes="**/*.class" excludes="**/examples/**"/>
        </jar>

        <war warfile="test.war" webxml="${src.dir}/examples/WEB-INF/web.xml">
            <webinf dir="${src.dir}/examples/WEB-INF">
                <exclude name="web.xml"/>
            </webinf>
            <webinf dir="${src.dir}/examples/cactus">
                <include name="cactus.properties"/>
                <include name="log_server.properties"/>
            </webinf>
            <classes dir="${src.dir}">
                <include name="log4j.properties"/>
            </classes>
            <lib dir="${lib.dir}">
                <exclude name="ant*.jar"/>
                <exclude name="servlet.jar"/>
                <exclude name="struts-1.1b2.jar" if="build_1.0"/>
                <exclude name="struts-1.0.jar" unless="build_1.0"/>
            </lib>
            <!-- do we want to remove test classes? -->
            <classes dir="${build.dir}"/>
            <classes dir="${src.dir}/" includes="examples/ApplicationResources.properties"/>
            <classes dir="${src.dir}/examples/cactus">
                <include name="cactus.properties"/>
                <include name="log_server.properties"/>
            </classes>
        </war>
    </target>

    <!-- prepare code for public release -->
    <target name="release" depends="package,docs">
        <!-- property name="servlet.version" value="2.3"/>
        <property name="struts.version" value="1.1"/ -->
        <condition property="servlet.version" value="2.2">
            <isset property="build_2.2"/>
        </condition>
        <condition property="struts.version" value="1.0">
            <isset property="build_1.0"/>
        </condition>
        <condition property="servlet.version" value="2.3">
            <not>
                <isset property="build_2.2"/>
            </not>
        </condition>
        <condition property="struts.version" value="1.1">
            <not>
                <isset property="build_1.0"/>
            </not>
        </condition>
        <echo message="creating release for servlet v${servlet.version} and struts v${struts.version}.."/>
        <zip zipFile="${basedir}/strutstest-${struts.version}_${servlet.version}.zip" basedir="${basedir}/dist"/>
    </target>

    <target name="release.src" depends="clean">
        <zip zipFile="${basedir}/strutstest-src.zip" basedir="${basedir}">
            <exclude name="*.tar.gz"/>
            <exclude name="*.zip"/>
            <exclude name="lib/*.jar"/>
        </zip>
    </target>

    <!-- Clean up the build -->
    <target name="clean">
        <delete dir="${build.dir}" />
        <delete dir="${basedir}/dist" />
        <delete dir="${test.dir}" />
        <delete file="${basedir}/test.war"/>
        <delete>
            <fileset dir="${basedir}" includes="strutstest*.zip"/>
        </delete>
        <delete>
            <fileset dir="${basedir}" includes="strutstest*.tar.gz"/>
        </delete>
    </target>

    <!-- Generate Javadocs for the application -->
    <target name="docs">
        <mkdir dir="${doc.dir}/api" />
        <copy file="${basedir}/howto.htm" toDir="${doc.dir}"/>
        <copy file="${basedir}/faq.htm" toDir="${doc.dir}"/>
        <copy file="${basedir}/LICENSE.TXT" toDir="${distribute.dir}"/>
        <copy file="${basedir}/README.TXT" toDir="${distribute.dir}"/>
        <mkdir dir="${distribute.dir}/examples" />
        <copy todir="${distribute.dir}/examples" >
            <fileset dir="${src.dir}/examples" excludes="**/tiles*.xml"/>
        </copy>
        <javadoc packagenames="servletunit,servletunit.struts"
            sourcepath="${src.dir}"
            destdir="${doc.dir}/api"
            author="true"
            version="true"
            use="true"
            windowtitle="StrutsTestCase Documentation"
            doctitle="&lt;H1&gt;StrutsTestCase for JUnit&lt;/H1&gt;"
            bottom="&lt;i&gt;Copyright &#169; Deryl Seale All Rights Reserved.&lt;/i&gt;">
            <group title="StrutsTestCase for JUnit" packages="servletunit.struts"/>
            <group title="ServletUnit Mock Object Framework" packages="servletunit"/>
            <!-- Put in links to JDK classes -->
            <link offline="true"
                href="http://java.sun.com/products/j2se/1.3/docs/api/"
                packagelistLoc="http://java.sun.com/products/jdk/1.3/docs/api" />
            <link offline="true"
                href="http://java.sun.com/j2ee/sdk_1.3/techdocs/api/"
                packagelistLoc="http://java.sun.com/j2ee/sdk_1.3/techdocs/api/" />
        </javadoc>
    </target>

    <!-- Run unit tests -->
    <target name="test">
        <mkdir dir="${test.dir}" />
        <junit printsummary="yes" haltonfailure="yes">
            <sysproperty key="test.dir" value="${test.dir}" />
            <classpath refid="class.path" />
            <classpath>
                <pathelement location="${src.dir}/examples/"/>
                <pathelement location="${src.dir}/"/>
            </classpath>
            <formatter type="xml" />

            <batchtest fork="yes" todir="${test.dir}">
                <fileset dir="${build.dir}">
                    <include name="**/examples/**/Test*.class" />
                    <include name="**/tests/**/Test*.class" />
                    <exclude name="**/cactus/**" />
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="test.cactus">
        <mkdir dir="${test.dir}" />
        <junit printsummary="yes" haltonfailure="yes">
            <sysproperty key="test.dir" value="${test.dir}" />
            <classpath refid="class.path" />
            <classpath>
                <pathelement location="${src.dir}/examples/cactus"/>
            </classpath>
            <formatter type="xml" />
            <!-- ugh. have to make sure the tiles test runs first, because other tests upset it. -->
            <batchtest fork="yes" todir="${test.dir}">
                <fileset dir="${build.dir}">
                    <include name="servletunit/struts/tests/cactus/*Tiles*.class" unless="build_1.0"/>
                </fileset>
                <fileset dir="${build.dir}">
                    <include name="**/cactus/**/Test*.class" />
                    <exclude name="servletunit/struts/tests/cactus/*Tiles*.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="deploy" depends="package">
        <copy todir="${appserver.home}/webapps" file="${basedir}/test.war" overwrite="true"/>
    </target>

    <target name="update.struts">
        <tstamp/>
        <delete dir="${temp.dir}"/>
        <mkdir dir="${temp.dir}"/>
        <get src="http://jakarta.apache.org/builds/jakarta-struts/nightly/jakarta-struts-${DSTAMP}.zip"
            dest="${temp.dir}/jakarta-struts-nightly.zip"
            verbose="false"/>
        <unzip src="${temp.dir}/jakarta-struts-nightly.zip" dest="${temp.dir}"/>
        <copy file="${temp.dir}/jakarta-struts/lib/struts.jar" tofile="${lib.dir}/struts-1.1b2.jar" overwrite="true"/>
        <!--<delete dir="${temp.dir}"/>-->
    </target>

    <!-- Run all the build targets -->
    <target name="all" depends="clean,build,package,deploy"/>

    <target name="auto.build" depends="clean,update.struts,build,test,package,deploy,test.cactus"/>

</project>


